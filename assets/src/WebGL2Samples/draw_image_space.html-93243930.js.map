{"version":3,"file":"draw_image_space.html-93243930.js","sources":["../../../../examples/src/WebGL2Samples/draw_image_space.ts"],"sourcesContent":["import { CanvasContext, RenderObject, RenderPipeline, Sampler, Texture } from \"@feng3d/render-api\";\nimport { WebGL } from \"@feng3d/webgl\";\nimport { getShaderSource } from \"./utility\";\n\nconst canvas = document.createElement(\"canvas\");\ncanvas.id = \"glcanvas\";\ncanvas.width = Math.min(window.innerWidth, window.innerHeight);\ncanvas.height = canvas.width;\ndocument.body.appendChild(canvas);\n\nconst renderingContext: CanvasContext = { canvasId: \"glcanvas\" };\nconst webgl = new WebGL(renderingContext);\n\nloadImage(\"../../assets/img/Di-3d.png\", (img) =>\n{\n    const texture: Texture = {\n        size: [img.width, img.height],\n        sources: [{ image: img, flipY: false }],\n        format: \"rgba8unorm\",\n    };\n    const sampler: Sampler = {\n        minFilter: \"linear\",\n        magFilter: \"linear\",\n    };\n\n    const program: RenderPipeline = {\n        vertex: {\n            code: getShaderSource(\"vs\")\n        },\n        fragment: {\n            code: getShaderSource(\"fs\"),\n            targets: [{ blend: {} }],\n        }\n    };\n\n    const renderObject: RenderObject = {\n        bindingResources: {\n            diffuse: { texture, sampler },\n            u_imageSize: [canvas.width / 2, canvas.height / 2],\n        },\n        geometry: {\n            primitive: { topology: \"triangle-list\" },\n            draw: { __type__: \"DrawVertex\", firstVertex: 0, vertexCount: 3 },\n        },\n        pipeline: program\n    };\n\n    webgl.submit({\n        commandEncoders: [{\n            passEncoders: [\n                {\n                    descriptor: {\n                        colorAttachments: [{\n                            clearValue: [0.0, 0.0, 0.0, 1.0],\n                            loadOp: \"clear\",\n                        }],\n                    },\n                    renderObjects: [renderObject]\n                }\n            ]\n        }]\n    });\n\n    // Delete WebGL resources\n    webgl.deleteTexture(texture);\n    webgl.deleteProgram(program);\n});\n\nfunction loadImage(url: string, onload: (img: HTMLImageElement) => void)\n{\n    const img = new Image();\n    img.src = url;\n    img.onload = function ()\n    {\n        onload(img);\n    };\n\n    return img;\n}\n"],"names":["canvas","renderingContext","webgl","WebGL","loadImage","img","texture","sampler","program","getShaderSource","renderObject","url","onload"],"mappings":"2IAIA,MAAMA,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,GAAK,WACZA,EAAO,MAAQ,KAAK,IAAI,OAAO,WAAY,OAAO,WAAW,EAC7DA,EAAO,OAASA,EAAO,MACvB,SAAS,KAAK,YAAYA,CAAM,EAEhC,MAAMC,EAAkC,CAAE,SAAU,YAC9CC,EAAQ,IAAIC,EAAMF,CAAgB,EAExCG,EAAU,6BAA+BC,GACzC,CACI,MAAMC,EAAmB,CACrB,KAAM,CAACD,EAAI,MAAOA,EAAI,MAAM,EAC5B,QAAS,CAAC,CAAE,MAAOA,EAAK,MAAO,GAAO,EACtC,OAAQ,YAAA,EAENE,EAAmB,CACrB,UAAW,SACX,UAAW,QAAA,EAGTC,EAA0B,CAC5B,OAAQ,CACJ,KAAMC,EAAgB,IAAI,CAC9B,EACA,SAAU,CACN,KAAMA,EAAgB,IAAI,EAC1B,QAAS,CAAC,CAAE,MAAO,CAAA,EAAI,CAC3B,CAAA,EAGEC,EAA6B,CAC/B,iBAAkB,CACd,QAAS,CAAE,QAAAJ,EAAS,QAAAC,CAAQ,EAC5B,YAAa,CAACP,EAAO,MAAQ,EAAGA,EAAO,OAAS,CAAC,CACrD,EACA,SAAU,CACN,UAAW,CAAE,SAAU,eAAgB,EACvC,KAAM,CAAE,SAAU,aAAc,YAAa,EAAG,YAAa,CAAE,CACnE,EACA,SAAUQ,CAAA,EAGdN,EAAM,OAAO,CACT,gBAAiB,CAAC,CACd,aAAc,CACV,CACI,WAAY,CACR,iBAAkB,CAAC,CACf,WAAY,CAAC,EAAK,EAAK,EAAK,CAAG,EAC/B,OAAQ,OAAA,CACX,CACL,EACA,cAAe,CAACQ,CAAY,CAChC,CACJ,CAAA,CACH,CAAA,CACJ,EAGDR,EAAM,cAAcI,CAAO,EAC3BJ,EAAM,cAAcM,CAAO,CAC/B,CAAC,EAED,SAASJ,EAAUO,EAAaC,EAChC,CACU,MAAAP,EAAM,IAAI,MAChB,OAAAA,EAAI,IAAMM,EACVN,EAAI,OAAS,UACb,CACIO,EAAOP,CAAG,CAAA,EAGPA,CACX"}