{"version":3,"file":"texture_vertex.html-ed0f8dfc.js","sources":["../../../../examples/src/WebGL2Samples/texture_vertex.ts"],"sourcesContent":["import { CanvasContext, GLVertexAttributeTypes, IndicesDataTypes, PrimitiveTopology, RenderPass, RenderPassObject, RenderPipeline, Sampler, Texture, VertexAttributes, VertexDataTypes, VertexFormat, vertexFormatMap } from \"@feng3d/render-api\";\nimport { WebGL } from \"@feng3d/webgl\";\n\nimport { mat4, vec3 } from \"gl-matrix\";\nimport { GlTFLoader, Primitive } from \"./third-party/gltf-loader\";\nimport { getShaderSource, loadImage } from \"./utility\";\n\n(function ()\n{\n    const IDrawMode2Name: { [key: string]: PrimitiveTopology } = {\n        0: \"point-list\",\n        3: \"line-strip\",\n        2: \"LINE_LOOP\",\n        1: \"line-list\",\n        5: \"triangle-strip\",\n        6: \"TRIANGLE_FAN\",\n        4: \"triangle-list\",\n    };\n\n    const VertexAttributeType2Name = Object.freeze({\n        5126: \"FLOAT\",\n        5120: \"BYTE\",\n        5122: \"SHORT\",\n        5121: \"UNSIGNED_BYTE\",\n        5123: \"UNSIGNED_SHORT\",\n        5131: \"HALF_FLOAT\",\n        5124: \"INT\",\n        5125: \"UNSIGNED_INT\",\n        36255: \"INT_2_10_10_10_REV\",\n        33640: \"UNSIGNED_INT_2_10_10_10_REV\"\n    });\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.id = \"glcanvas\";\n    canvas.width = Math.min(window.innerWidth, window.innerHeight);\n    canvas.height = canvas.width;\n    document.body.appendChild(canvas);\n\n    const rc: CanvasContext = { canvasId: \"glcanvas\", webGLcontextId: \"webgl2\", webGLContextAttributes: { antialias: false } };\n    const webgl = new WebGL(rc);\n\n    // -- Init program\n    const program: RenderPipeline = {\n        vertex: { code: getShaderSource(\"vs\") }, fragment: { code: getShaderSource(\"fs\") },\n        depthStencil: { depthCompare: \"less\" },\n    };\n\n    const vertexArrayMaps: { [key: string]: { vertices?: VertexAttributes, indices: IndicesDataTypes }[] } = {};\n\n    // var in loop\n    let mesh;\n    let primitive: Primitive;\n    let vertexBuffer: VertexDataTypes;\n    let indicesBuffer: IndicesDataTypes;\n\n    let texture: Texture;\n    let sampler: Sampler;\n\n    // -- Load model then render\n    const glTFLoader = new GlTFLoader();\n    let curScene;\n    const gltfUrl = \"../../assets/gltf/plane.gltf\";\n    glTFLoader.loadGLTF(gltfUrl, function (glTF)\n    {\n        curScene = glTF.scenes[glTF.defaultScene];\n\n        let i; let len;\n\n        for (const mid in curScene.meshes)\n        {\n            mesh = curScene.meshes[mid];\n            vertexArrayMaps[mid] = [];\n\n            for (i = 0, len = mesh.primitives.length; i < len; ++i)\n            {\n                primitive = mesh.primitives[i];\n\n                // -- Initialize buffer\n                const vertices = primitive.vertexBuffer;\n                vertexBuffer = vertices;\n\n                const indices = primitive.indices;\n                indicesBuffer = indices;\n\n                // -- VertexAttribPointer\n                const positionInfo = primitive.attributes.POSITION;\n                const normalInfo = primitive.attributes.NORMAL;\n                const texcoordInfo = primitive.attributes.TEXCOORD_0;\n\n                //\n                vertexArrayMaps[mid].push({\n                    vertices: {\n                        position: { data: vertexBuffer, format: getIVertexFormat(positionInfo.size, VertexAttributeType2Name[positionInfo.type]), arrayStride: positionInfo.stride, offset: positionInfo.offset },\n                        normal: { data: vertexBuffer, format: getIVertexFormat(normalInfo.size, VertexAttributeType2Name[normalInfo.type]), arrayStride: normalInfo.stride, offset: normalInfo.offset },\n                        texcoord: { data: vertexBuffer, format: getIVertexFormat(texcoordInfo.size, VertexAttributeType2Name[texcoordInfo.type]), arrayStride: texcoordInfo.stride, offset: texcoordInfo.offset },\n                    }, indices: indicesBuffer\n                });\n            }\n        }\n\n        // -- Init Texture\n        const imageUrl = \"../../assets/img/heightmap.jpg\";\n        loadImage(imageUrl, function (image)\n        {\n            // -- Init 2D Texture\n            texture = {\n                format: \"rgba8unorm\",\n                mipLevelCount: 1,\n                size: [256, 256],\n                sources: [{ image, flipY: false }],\n            };\n            sampler = {\n                minFilter: \"nearest\",\n                magFilter: \"nearest\",\n                addressModeU: \"clamp-to-edge\",\n                addressModeV: \"clamp-to-edge\",\n            };\n\n            requestAnimationFrame(render);\n        });\n    });\n\n    // -- Initialize render variables\n    const orientation = [0.0, 0.0, 0.0];\n\n    const tempMat4 = mat4.create();\n    const modelMatrix = mat4.create();\n\n    const eyeVec3 = vec3.create();\n    vec3.set(eyeVec3, 4, 3, 1);\n    const centerVec3 = vec3.create();\n    vec3.set(centerVec3, 0, 0.5, 0);\n    const upVec3 = vec3.create();\n    vec3.set(upVec3, 0, 1, 0);\n\n    const viewMatrix = mat4.create();\n    mat4.lookAt(viewMatrix, eyeVec3, centerVec3, upVec3);\n\n    const mvMatrix = mat4.create();\n    mat4.multiply(mvMatrix, viewMatrix, modelMatrix);\n    const perspectiveMatrix = mat4.create();\n    mat4.perspective(perspectiveMatrix, 0.785, 1, 1, 1000);\n\n    // -- Mouse Behaviour\n\n    let mouseDown = false;\n    let lastMouseX = 0;\n    let lastMouseY = 0;\n\n    canvas.onmousedown = function (event)\n    {\n        mouseDown = true;\n        lastMouseX = event.clientX;\n        lastMouseY = event.clientY;\n    };\n\n    canvas.onmouseup = function (event)\n    {\n        mouseDown = false;\n    };\n\n    canvas.onmousemove = function (event)\n    {\n        const newX = event.clientX;\n        const newY = event.clientY;\n\n        const deltaX = newX - lastMouseX;\n        const deltaY = newY - lastMouseY;\n\n        const m = mat4.create();\n        mat4.rotateX(m, m, deltaX / 100.0);\n        mat4.rotateY(m, m, deltaY / 100.0);\n\n        mat4.multiply(tempMat4, mvMatrix, m);\n        mat4.copy(mvMatrix, tempMat4);\n\n        lastMouseX = newX;\n        lastMouseY = newY;\n    };\n\n    const localMV = mat4.create();\n    function render()\n    {\n        const renderObjects: RenderPassObject[] = [];\n        // -- Render\n        const rp: RenderPass = {\n            descriptor: {\n                colorAttachments: [{ clearValue: [0.0, 0.0, 0.0, 1.0], loadOp: \"clear\" }],\n                depthStencilAttachment: { depthLoadOp: \"clear\" }\n            },\n            renderPassObjects: renderObjects,\n        };\n\n        orientation[0] = 0.00020; // yaw\n        orientation[1] = 0.00010; // pitch\n        orientation[2] = 0.00005; // roll\n\n        mat4.rotateX(mvMatrix, mvMatrix, orientation[0] * Math.PI);\n        mat4.rotateY(mvMatrix, mvMatrix, orientation[1] * Math.PI);\n        mat4.rotateZ(mvMatrix, mvMatrix, orientation[2] * Math.PI);\n\n        let i; let len;\n        for (const mid in curScene.meshes)\n        {\n            mesh = curScene.meshes[mid];\n\n            for (i = 0, len = mesh.primitives.length; i < len; ++i)\n            {\n                primitive = mesh.primitives[i];\n\n                mat4.multiply(localMV, mvMatrix, primitive.matrix);\n\n                renderObjects.push({\n                    pipeline: {\n                        ...program,\n                        primitive: { topology: IDrawMode2Name[primitive.mode] },\n                    },\n                    bindingResources: {\n                        mvMatrix: localMV,\n                        pMatrix: perspectiveMatrix,\n                        displacementMap: { texture, sampler },\n                        diffuse: { texture, sampler },\n                    },\n                    vertices: vertexArrayMaps[mid][i].vertices,\n                    indices: vertexArrayMaps[mid][i].indices,\n                    draw: { __type__: \"DrawIndexed\", indexCount: primitive.indices.length }\n                });\n            }\n        }\n\n        webgl.submit({ commandEncoders: [{ passEncoders: [rp] }] });\n\n        requestAnimationFrame(render);\n    }\n})();\n\nfunction getIVertexFormat(numComponents: 1 | 2 | 3 | 4, type: GLVertexAttributeTypes = \"FLOAT\", normalized = false): VertexFormat\n{\n    for (const key in vertexFormatMap)\n    {\n        const element = vertexFormatMap[key];\n        if (\n            element.numComponents === numComponents\n            && element.type === type\n            && !element.normalized === !normalized\n        )\n        {\n            return key as VertexFormat;\n        }\n    }\n\n    console.error(`没有找到与 ${JSON.stringify({ numComponents, type, normalized })} 对应的顶点数据格式！`);\n\n    return undefined;\n}"],"names":["IDrawMode2Name","VertexAttributeType2Name","canvas","rc","webgl","WebGL","program","getShaderSource","vertexArrayMaps","mesh","primitive","vertexBuffer","indicesBuffer","texture","sampler","glTFLoader","GlTFLoader","curScene","gltfUrl","glTF","i","len","mid","positionInfo","normalInfo","texcoordInfo","getIVertexFormat","loadImage","image","render","orientation","tempMat4","mat4.create","modelMatrix","eyeVec3","vec3.create","vec3.set","centerVec3","upVec3","viewMatrix","mat4.lookAt","mvMatrix","mat4.multiply","perspectiveMatrix","mat4.perspective","lastMouseX","lastMouseY","event","newX","newY","deltaX","deltaY","mat4.rotateX","mat4.rotateY","mat4.copy","localMV","renderObjects","rp","mat4.rotateZ","numComponents","type","normalized","key","vertexFormatMap","element"],"mappings":"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"}