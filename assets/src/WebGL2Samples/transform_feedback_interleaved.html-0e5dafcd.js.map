{"version":3,"file":"transform_feedback_interleaved.html-0e5dafcd.js","sources":["../../../../examples/src/WebGL2Samples/transform_feedback_interleaved.ts"],"sourcesContent":["import { CanvasContext, IndicesDataTypes, RenderPipeline, VertexAttributes, VertexDataTypes } from \"@feng3d/render-api\";\nimport { getIGLBuffer, TransformFeedback, TransformFeedbackPipeline, WebGL } from \"@feng3d/webgl\";\nimport { getShaderSource } from \"./utility\";\n\n(function ()\n{\n    // -- Init Canvas\n    const canvas = document.createElement(\"canvas\");\n    canvas.id = \"glcanvas\";\n    canvas.width = Math.min(window.innerWidth, window.innerHeight);\n    canvas.height = canvas.width;\n    document.body.appendChild(canvas);\n\n    // -- Init WebGL Context\n    const rc: CanvasContext = { canvasId: \"glcanvas\", webGLcontextId: \"webgl2\", webGLContextAttributes: { antialias: false } };\n    const webgl = new WebGL(rc);\n\n    // -- Init Program\n    const PROGRAM_TRANSFORM = 0;\n    const PROGRAM_FEEDBACK = 1;\n\n    const programTransform = (function (vertexShaderSourceTransform, fragmentShaderSourceTransform)\n    {\n        const programTransform: TransformFeedbackPipeline = {\n            vertex: { code: vertexShaderSourceTransform },\n            transformFeedbackVaryings: { varyings: [\"gl_Position\", \"v_color\"], bufferMode: \"INTERLEAVED_ATTRIBS\" },\n        };\n\n        return programTransform;\n    })(getShaderSource(\"vs-transform\"), getShaderSource(\"fs-transform\"));\n\n    const programFeedback: RenderPipeline = {\n        vertex: { code: getShaderSource(\"vs-feedback\") }, fragment: { code: getShaderSource(\"fs-feedback\") },\n    };\n\n    // -- Init Buffer\n    const SIZE_V4C4 = 32;\n    const VERTEX_COUNT = 6;\n    const vertices = new Float32Array([\n        -1.0, -1.0, 0.0, 1.0,\n        1.0, -1.0, 0.0, 1.0,\n        1.0, 1.0, 0.0, 1.0,\n        1.0, 1.0, 0.0, 1.0,\n        -1.0, 1.0, 0.0, 1.0,\n        -1.0, -1.0, 0.0, 1.0\n    ]);\n\n    const buffers: VertexDataTypes[] = [\n        // Transform buffer\n        vertices,\n        // Feedback empty buffer\n        new Float32Array(SIZE_V4C4 * VERTEX_COUNT / Float32Array.BYTES_PER_ELEMENT),\n    ];\n\n    // -- Init Vertex Array\n    const vertexArrays: { vertices?: VertexAttributes, indices?: IndicesDataTypes }[] = [\n        {\n            vertices: {\n                position: { data: buffers[PROGRAM_TRANSFORM], format: \"float32x4\" },\n            }\n        },\n        {\n            vertices: {\n                position: { data: buffers[PROGRAM_FEEDBACK], format: \"float32x4\", arrayStride: SIZE_V4C4, offset: 0 },\n                color: { data: buffers[PROGRAM_FEEDBACK], format: \"float32x4\", arrayStride: SIZE_V4C4, offset: SIZE_V4C4 / 2 },\n            }\n        },\n    ];\n\n    // -- Init TransformFeedback\n    const transformFeedback: TransformFeedback = {\n        bindBuffers: [\n            { index: 0, data: buffers[PROGRAM_FEEDBACK] }\n        ]\n    };\n\n    // First draw, capture the attributes\n    // Disable rasterization, vertices processing only\n\n    const matrix = new Float32Array([\n        0.5, 0.0, 0.0, 0.0,\n        0.0, 0.5, 0.0, 0.0,\n        0.0, 0.0, 0.5, 0.0,\n        0.0, 0.0, 0.0, 1.0\n    ]);\n\n    webgl.submit({\n        commandEncoders: [{\n            passEncoders: [\n                {\n                    __type__: \"TransformFeedbackPass\",\n                    transformFeedbackObjects: [\n                        {\n                            pipeline: programTransform,\n                            vertices: vertexArrays[PROGRAM_TRANSFORM].vertices,\n                            uniforms: { MVP: matrix },\n                            transformFeedback,\n                            draw: { __type__: \"DrawVertex\", vertexCount: VERTEX_COUNT },\n                        }\n                    ],\n                },\n                {\n                    descriptor: { colorAttachments: [{ clearValue: [0.0, 0.0, 0.0, 1.0], loadOp: \"clear\" }] },\n                    renderPassObjects: [\n                        // Second draw, reuse captured attributes\n                        {\n                            pipeline: programFeedback,\n                            vertices: vertexArrays[PROGRAM_FEEDBACK].vertices,\n                            indices: vertexArrays[PROGRAM_FEEDBACK].indices,\n                            draw: { __type__: \"DrawVertex\", vertexCount: VERTEX_COUNT },\n                        }\n                    ],\n                }]\n        }]\n    });\n\n    // -- Delete WebGL resources\n    webgl.deleteTransformFeedback(transformFeedback);\n    webgl.deleteBuffer(getIGLBuffer(buffers[PROGRAM_TRANSFORM]));\n    webgl.deleteBuffer(getIGLBuffer(buffers[PROGRAM_FEEDBACK]));\n    webgl.deleteProgram(programTransform);\n    webgl.deleteProgram(programFeedback);\n})();\n"],"names":["canvas","rc","webgl","WebGL","PROGRAM_TRANSFORM","PROGRAM_FEEDBACK","programTransform","vertexShaderSourceTransform","fragmentShaderSourceTransform","getShaderSource","programFeedback","SIZE_V4C4","VERTEX_COUNT","buffers","vertexArrays","transformFeedback","matrix","getIGLBuffer"],"mappings":"mJAIC,UACD,CAEU,MAAAA,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,GAAK,WACZA,EAAO,MAAQ,KAAK,IAAI,OAAO,WAAY,OAAO,WAAW,EAC7DA,EAAO,OAASA,EAAO,MACd,SAAA,KAAK,YAAYA,CAAM,EAG1B,MAAAC,EAAoB,CAAE,SAAU,WAAY,eAAgB,SAAU,uBAAwB,CAAE,UAAW,EAAA,GAC3GC,EAAQ,IAAIC,EAAMF,CAAE,EAGpBG,EAAoB,EACpBC,EAAmB,EAEnBC,EAAoB,SAAUC,EAA6BC,EACjE,CAMWF,MAL6C,CAChD,OAAQ,CAAE,KAAMC,CAA4B,EAC5C,0BAA2B,CAAE,SAAU,CAAC,cAAe,SAAS,EAAG,WAAY,qBAAsB,CAAA,GAI1GE,EAAgB,cAAc,EAAGA,EAAgB,cAAc,CAAC,EAE7DC,EAAkC,CACpC,OAAQ,CAAE,KAAMD,EAAgB,aAAa,CAAE,EAAG,SAAU,CAAE,KAAMA,EAAgB,aAAa,CAAE,CAAA,EAIjGE,EAAY,GACZC,EAAe,EAUfC,EAA6B,CATlB,IAAI,aAAa,CAC9B,GAAM,GAAM,EAAK,EACjB,EAAK,GAAM,EAAK,EAChB,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EAAK,EACf,GAAM,EAAK,EAAK,EAChB,GAAM,GAAM,EAAK,CAAA,CACpB,EAMG,IAAI,aAAaF,EAAYC,EAAe,aAAa,iBAAiB,CAAA,EAIxEE,EAA8E,CAChF,CACI,SAAU,CACN,SAAU,CAAE,KAAMD,EAAQT,CAAiB,EAAG,OAAQ,WAAY,CACtE,CACJ,EACA,CACI,SAAU,CACN,SAAU,CAAE,KAAMS,EAAQR,CAAgB,EAAG,OAAQ,YAAa,YAAaM,EAAW,OAAQ,CAAE,EACpG,MAAO,CAAE,KAAME,EAAQR,CAAgB,EAAG,OAAQ,YAAa,YAAaM,EAAW,OAAQA,EAAY,CAAE,CACjH,CACJ,CAAA,EAIEI,EAAuC,CACzC,YAAa,CACT,CAAE,MAAO,EAAG,KAAMF,EAAQR,CAAgB,CAAE,CAChD,CAAA,EAMEW,EAAS,IAAI,aAAa,CAC5B,GAAK,EAAK,EAAK,EACf,EAAK,GAAK,EAAK,EACf,EAAK,EAAK,GAAK,EACf,EAAK,EAAK,EAAK,CAAA,CAClB,EAEDd,EAAM,OAAO,CACT,gBAAiB,CAAC,CACd,aAAc,CACV,CACI,SAAU,wBACV,yBAA0B,CACtB,CACI,SAAUI,EACV,SAAUQ,EAAaV,CAAiB,EAAE,SAC1C,SAAU,CAAE,IAAKY,CAAO,EACxB,kBAAAD,EACA,KAAM,CAAE,SAAU,aAAc,YAAaH,CAAa,CAC9D,CACJ,CACJ,EACA,CACI,WAAY,CAAE,iBAAkB,CAAC,CAAE,WAAY,CAAC,EAAK,EAAK,EAAK,CAAG,EAAG,OAAQ,OAAS,CAAA,CAAE,EACxF,kBAAmB,CAEf,CACI,SAAUF,EACV,SAAUI,EAAaT,CAAgB,EAAE,SACzC,QAASS,EAAaT,CAAgB,EAAE,QACxC,KAAM,CAAE,SAAU,aAAc,YAAaO,CAAa,CAC9D,CACJ,CACJ,CAAC,CAAA,CACR,CAAA,CACJ,EAGDV,EAAM,wBAAwBa,CAAiB,EAC/Cb,EAAM,aAAae,EAAaJ,EAAQT,CAAiB,CAAC,CAAC,EAC3DF,EAAM,aAAae,EAAaJ,EAAQR,CAAgB,CAAC,CAAC,EAC1DH,EAAM,cAAcI,CAAgB,EACpCJ,EAAM,cAAcQ,CAAe,CACvC,GAAG"}