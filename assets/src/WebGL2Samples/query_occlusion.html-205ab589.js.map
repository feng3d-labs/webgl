{"version":3,"file":"query_occlusion.html-205ab589.js","sources":["../../../../examples/src/WebGL2Samples/query_occlusion.ts"],"sourcesContent":["import { CanvasContext, OcclusionQuery, RenderObject, RenderPass, RenderPassObject, RenderPipeline, VertexAttributes } from \"@feng3d/render-api\";\nimport { WebGL } from \"@feng3d/webgl\";\n\nimport { getShaderSource } from \"./utility\";\n\n// -- Init Canvas\nconst canvas = document.createElement(\"canvas\");\ncanvas.id = \"glcanvas\";\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\ndocument.body.appendChild(canvas);\n\n// -- Init WebGL Context\nconst rc: CanvasContext = { canvasId: \"glcanvas\", webGLcontextId: \"webgl2\" };\nconst webgl = new WebGL(rc);\n\n// -- Init Program\nconst program: RenderPipeline = {\n    vertex: { code: getShaderSource(\"vs\") }, fragment: { code: getShaderSource(\"fs\") },\n    depthStencil: {},\n    primitive: { topology: \"triangle-list\" },\n};\n\n// -- Init Buffer\nconst vertices = new Float32Array([\n    -0.3, -0.5, 0.0,\n    0.3, -0.5, 0.0,\n    0.0, 0.5, 0.0,\n\n    -0.3, -0.5, 0.5,\n    0.3, -0.5, 0.5,\n    0.0, 0.5, 0.5\n]);\n\n// -- Init Vertex Array\nconst vertexArray: { vertices?: VertexAttributes } = {\n    vertices: {\n        pos: { data: vertices, format: \"float32x3\", arrayStride: 0, offset: 0 },\n    }\n};\n\nconst renderObjects: RenderPassObject[] = [];\n// -- Render\nconst rp: RenderPass = {\n    descriptor: {\n        colorAttachments: [{ clearValue: [0.0, 0.0, 0.0, 1.0], loadOp: \"clear\" }],\n        depthStencilAttachment: { depthLoadOp: \"clear\" },\n    },\n    renderPassObjects: renderObjects,\n};\n\nconst ro: RenderObject = {\n    pipeline: program,\n    vertices: vertexArray.vertices,\n    draw: { __type__: \"DrawVertex\", firstVertex: 0, vertexCount: 3 },\n};\nrenderObjects.push(ro);\n\nconst occlusionQuery: OcclusionQuery = {\n    __type__: \"OcclusionQuery\",\n    renderObjects: [{\n        ...ro,\n        draw: { __type__: \"DrawVertex\", firstVertex: 3, vertexCount: 3 },\n    }],\n    onQuery(result: number)\n    {\n        document.getElementById(\"samplesPassed\").innerHTML = `Any samples passed: ${Number(result)}`;\n    }\n};\n\nrenderObjects.push(occlusionQuery);\n\nwebgl.submit({ commandEncoders: [{ passEncoders: [rp] }] });\n\n// -- Delete WebGL resources\nwebgl.deleteProgram(program);\n"],"names":["canvas","rc","webgl","WebGL","program","getShaderSource","vertices","vertexArray","renderObjects","rp","ro","occlusionQuery","result"],"mappings":"2IAMA,MAAMA,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,GAAK,WACZA,EAAO,MAAQ,OAAO,WACtBA,EAAO,OAAS,OAAO,YACvB,SAAS,KAAK,YAAYA,CAAM,EAGhC,MAAMC,EAAoB,CAAE,SAAU,WAAY,eAAgB,QAAS,EACrEC,EAAQ,IAAIC,EAAMF,CAAE,EAGpBG,EAA0B,CAC5B,OAAQ,CAAE,KAAMC,EAAgB,IAAI,CAAE,EAAG,SAAU,CAAE,KAAMA,EAAgB,IAAI,CAAE,EACjF,aAAc,CAAC,EACf,UAAW,CAAE,SAAU,eAAgB,CAC3C,EAGMC,EAAW,IAAI,aAAa,CAC9B,IAAM,IAAM,EACZ,GAAK,IAAM,EACX,EAAK,GAAK,EAEV,IAAM,IAAM,GACZ,GAAK,IAAM,GACX,EAAK,GAAK,EACd,CAAC,EAGKC,EAA+C,CACjD,SAAU,CACN,IAAK,CAAE,KAAMD,EAAU,OAAQ,YAAa,YAAa,EAAG,OAAQ,CAAE,CAC1E,CACJ,EAEME,EAAoC,CAAA,EAEpCC,EAAiB,CACnB,WAAY,CACR,iBAAkB,CAAC,CAAE,WAAY,CAAC,EAAK,EAAK,EAAK,CAAG,EAAG,OAAQ,QAAS,EACxE,uBAAwB,CAAE,YAAa,OAAQ,CACnD,EACA,kBAAmBD,CACvB,EAEME,EAAmB,CACrB,SAAUN,EACV,SAAUG,EAAY,SACtB,KAAM,CAAE,SAAU,aAAc,YAAa,EAAG,YAAa,CAAE,CACnE,EACAC,EAAc,KAAKE,CAAE,EAErB,MAAMC,EAAiC,CACnC,SAAU,iBACV,cAAe,CAAC,CACZ,GAAGD,EACH,KAAM,CAAE,SAAU,aAAc,YAAa,EAAG,YAAa,CAAE,CAAA,CAClE,EACD,QAAQE,EACR,CACI,SAAS,eAAe,eAAe,EAAE,UAAY,uBAAuB,OAAOA,CAAM,CAAC,EAC9F,CACJ,EAEAJ,EAAc,KAAKG,CAAc,EAEjCT,EAAM,OAAO,CAAE,gBAAiB,CAAC,CAAE,aAAc,CAACO,CAAE,EAAG,CAAA,CAAG,EAG1DP,EAAM,cAAcE,CAAO"}