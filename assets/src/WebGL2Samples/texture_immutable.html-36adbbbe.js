import"../../modulepreload-polyfill-3cfb730f.js";import{g as d,l as S}from"../../utility-e972c1ee.js";import{W as v}from"../../WebGL-b4686ab5.js";import{s as Z}from"../../noise3D-c3a3e7b7.js";import"../../vec3-5d562fd8.js";import"../../common-d8a29b8a.js";(function(){const e=document.createElement("canvas");e.id="glcanvas",e.width=Math.min(window.innerWidth,window.innerHeight),e.height=e.width,document.body.appendChild(e);const x={canvasId:"glcanvas",webGLcontextId:"webgl2"},i=new v(x),t={LEFT:0,RIGHT:1,MAX:2},r=new Array(t.MAX);r[t.LEFT]={x:0,y:e.height/4,z:e.width/2,w:e.height/2},r[t.RIGHT]={x:e.width/2,y:e.height/4,z:e.width/2,w:e.height/2};const l={vertex:{code:d("vs")},fragment:{code:d("fs")}},p={vertex:{code:d("vs-3d")},fragment:{code:d("fs-3d")}},w=new Float32Array([-1,-1,1,-1,1,1,1,1,-1,1,-1,-1]),g=new Float32Array([0,1,1,1,1,0,1,0,0,0,0,1]),f={vertices:{position:{data:w,format:"float32x2"},in_texcoord:{data:g,format:"float32x2"},texcoord:{data:g,format:"float32x2"}}},{texture3D:u,sampler3D:E}=I();S("../../assets/img/Di-3d.png",function(h){const s=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),c={format:"rgba8unorm",mipLevelCount:1,size:[512,512],sources:[{image:h,flipY:!1}]},m={minFilter:"nearest",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},o={pipeline:l,bindingResources:{MVP:s},geometry:{vertices:f.vertices,draw:{__type__:"DrawVertex",vertexCount:6}}},n=[],a={descriptor:{colorAttachments:[{clearValue:[0,0,0,1],loadOp:"clear"}]},renderObjects:n};n.push({viewport:{x:r[t.LEFT].x,y:r[t.LEFT].y,width:r[t.LEFT].z,height:r[t.LEFT].w},...o,pipeline:l,bindingResources:{...o.bindingResources,diffuse:{texture:c,sampler:m}}}),n.push({viewport:{x:r[t.RIGHT].x,y:r[t.RIGHT].y,width:r[t.RIGHT].z,height:r[t.RIGHT].w},...o,pipeline:p,bindingResources:{...o.bindingResources,diffuse:{texture:u,sampler:E}}}),i.submit({commandEncoders:[{passEncoders:[a]}]}),i.deleteTexture(c),i.deleteTexture(u),i.deleteProgram(l),i.deleteProgram(p)});function I(){const s=new Uint8Array(32768);for(let o=0;o<32;++o)for(let n=0;n<32;++n)for(let a=0;a<32;++a)s[a+n*32+o*32*32]=Z([a,n,o])*256;const c={dimension:"3d",format:"r8uint",generateMipmap:!0,mipLevelCount:Math.log2(32),size:[32,32,32],sources:[{__type__:"TextureDataSource",size:[32,32,32],data:s}]},m={lodMinClamp:0,lodMaxClamp:Math.log2(32),minFilter:"linear",magFilter:"linear",mipmapFilter:"linear"};return{texture3D:c,sampler3D:m}}})();
//# sourceMappingURL=texture_immutable.html-36adbbbe.js.map
