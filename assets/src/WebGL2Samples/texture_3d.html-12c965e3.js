import"../../modulepreload-polyfill-3cfb730f.js";import{g as f}from"../../utility-e972c1ee.js";import{r as z}from"../../index-ac627bb5.js";import{W as E}from"../../WebGL-b4686ab5.js";import{s as I}from"../../noise3D-c3a3e7b7.js";import"../../vec3-5d562fd8.js";import"../../common-d8a29b8a.js";(function(){const c=document.createElement("canvas");c.id="glcanvas",c.width=Math.min(window.innerWidth,window.innerHeight),c.height=c.width,document.body.appendChild(c);const T={canvasId:"glcanvas",webGLcontextId:"webgl2"},g=new E(T),e={x:c.width,y:c.height},l={TOP_LEFT:0,TOP_RIGHT:1,BOTTOM_RIGHT:2,BOTTOM_LEFT:3,MAX:4},s=new Array(l.MAX);s[l.BOTTOM_LEFT]={x:0,y:0,z:e.x/2,w:e.y/2},s[l.BOTTOM_RIGHT]={x:e.x/2,y:0,z:e.x/2,w:e.y/2},s[l.TOP_RIGHT]={x:e.x/2,y:e.y/2,z:e.x/2,w:e.y/2},s[l.TOP_LEFT]={x:0,y:e.y/2,z:e.x/2,w:e.y/2};const t=32,M=new Uint8Array(t*t*t);for(let o=0;o<t;++o)for(let n=0;n<t;++n)for(let a=0;a<t;++a)M[a+n*t+o*t*t]=I([a,n,o])*256;const _={size:[t,t,t],dimension:"3d",format:"r8unorm",generateMipmap:!0,sources:[{__type__:"TextureDataSource",mipLevel:0,size:[t,t,t],data:M}]},v={lodMinClamp:0,lodMaxClamp:Math.log2(t),minFilter:"linear",magFilter:"linear",mipmapFilter:"linear"},A={vertex:{code:f("vs")},fragment:{code:f("fs")}},F=new Float32Array([-1,-1,1,-1,1,1,1,1,-1,1,-1,-1]),O=new Float32Array([0,1,1,1,1,0,1,0,0,0,0,1]),R={vertices:{position:{data:F,format:"float32x2"},in_texcoord:{data:O,format:"float32x2"}}},r=[0,0,0];requestAnimationFrame(u);function h(o,n,a){const m=Math.cos(o),d=Math.sin(o),i=Math.cos(n),w=Math.sin(n),p=Math.cos(a),x=Math.sin(a);return[m*i,m*w*x-d*p,m*w*p+d*x,0,d*i,d*w*x+m*p,d*w*p-m*x,0,-w,i*x,i*p,0,0,0,0,1]}const b={pipeline:A,bindingResources:{diffuse:{texture:_,sampler:v}},vertices:R.vertices,draw:{__type__:"DrawVertex",vertexCount:6}},y=[];for(let o=0;o<l.MAX;++o)y.push({...b,viewport:{x:s[o].x,y:s[o].y,width:s[o].z,height:s[o].w}});const P={descriptor:{colorAttachments:[{clearValue:[0,0,0,1],loadOp:"clear"}]},renderPassObjects:y};function u(){r[0]+=.02,r[1]+=.01,r[2]+=.005;const o=new Float32Array(h(r[0],0,0)),n=new Float32Array(h(0,r[1],0)),a=new Float32Array(h(0,0,r[2])),m=new Float32Array(h(r[0],r[1],r[2])),d=[o,n,a,m];for(let i=0;i<l.MAX;++i)z(y[i].bindingResources).orientation=d[i];g.submit({commandEncoders:[{passEncoders:[P]}]}),requestAnimationFrame(u)}})();
//# sourceMappingURL=texture_3d.html-12c965e3.js.map
