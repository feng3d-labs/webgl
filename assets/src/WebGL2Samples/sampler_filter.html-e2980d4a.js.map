{"version":3,"file":"sampler_filter.html-e2980d4a.js","sources":["../../../../examples/src/WebGL2Samples/sampler_filter.ts"],"sourcesContent":["import { CanvasContext, RenderPassObject, RenderObject, RenderPass, RenderPipeline, Sampler, Texture, VertexAttributes } from \"@feng3d/render-api\";\nimport { WebGL } from \"@feng3d/webgl\";\nimport { getShaderSource, loadImage } from \"./utility\";\n\nconst canvas = document.createElement(\"canvas\");\ncanvas.id = \"glcanvas\";\ncanvas.width = Math.min(window.innerWidth, window.innerHeight);\ncanvas.height = canvas.width;\ndocument.body.appendChild(canvas);\n\nconst rc: CanvasContext = { canvasId: \"glcanvas\", webGLcontextId: \"webgl2\" };\nconst webgl = new WebGL(rc);\n\n// -- Divide viewport\n\nconst windowSize = {\n    x: canvas.width,\n    y: canvas.height\n};\n\nconst Corners = {\n    TOP_LEFT: 0,\n    TOP_RIGHT: 1,\n    BOTTOM_RIGHT: 2,\n    BOTTOM_LEFT: 3,\n    MAX: 4\n};\n\nconst viewport: { x: number, y: number, z: number, w: number }[] = new Array(Corners.MAX);\n\nviewport[Corners.BOTTOM_LEFT] = {\n    x: 0,\n    y: 0,\n    z: windowSize.x / 2,\n    w: windowSize.y / 2\n};\n\nviewport[Corners.BOTTOM_RIGHT] = {\n    x: windowSize.x / 2,\n    y: 0,\n    z: windowSize.x / 2,\n    w: windowSize.y / 2\n};\n\nviewport[Corners.TOP_RIGHT] = {\n    x: windowSize.x / 2,\n    y: windowSize.y / 2,\n    z: windowSize.x / 2,\n    w: windowSize.y / 2\n};\n\nviewport[Corners.TOP_LEFT] = {\n    x: 0,\n    y: windowSize.y / 2,\n    z: windowSize.x / 2,\n    w: windowSize.y / 2\n};\n\n// -- Initialize program\n\nconst program: RenderPipeline = {\n    vertex: { code: getShaderSource(\"vs\") }, fragment: { code: getShaderSource(\"fs\") },\n};\n\n// -- Initialize buffer\n\nconst positions = new Float32Array([\n    -1.0, -1.0,\n    1.0, -1.0,\n    1.0, 1.0,\n    1.0, 1.0,\n    -1.0, 1.0,\n    -1.0, -1.0\n]);\n\nconst texcoords = new Float32Array([\n    0.0, 1.0,\n    1.0, 1.0,\n    1.0, 0.0,\n    1.0, 0.0,\n    0.0, 0.0,\n    0.0, 1.0\n]);\n\n// -- Initialize vertex array\n\nconst vertexArray: { vertices?: VertexAttributes } = {\n    vertices: {\n        position: { data: positions, format: \"float32x2\" },\n        textureCoordinates: { data: texcoords, format: \"float32x2\" },\n    }\n};\n\n// -- Initialize samplers\n\nconst samplers: Sampler[] = new Array(Corners.MAX);\nfor (let i = 0; i < Corners.MAX; ++i)\n{\n    samplers[i] = { addressModeU: \"clamp-to-edge\", addressModeV: \"clamp-to-edge\", addressModeW: \"clamp-to-edge\" };\n}\n\n// Min filter\nsamplers[Corners.TOP_LEFT].minFilter = \"nearest\";\nsamplers[Corners.TOP_RIGHT].minFilter = \"linear\";\nsamplers[Corners.BOTTOM_RIGHT].minFilter = \"linear\";\nsamplers[Corners.BOTTOM_LEFT].minFilter = \"linear\";\n\n// Mag filter\nsamplers[Corners.TOP_LEFT].magFilter = \"nearest\";\nsamplers[Corners.TOP_RIGHT].magFilter = \"linear\";\nsamplers[Corners.BOTTOM_RIGHT].magFilter = \"linear\";\nsamplers[Corners.BOTTOM_LEFT].magFilter = \"linear\";\n\n//\nsamplers[Corners.BOTTOM_RIGHT].mipmapFilter = \"nearest\";\nsamplers[Corners.BOTTOM_LEFT].mipmapFilter = \"linear\";\n\n// -- Load texture then render\n\nconst imageUrl = \"../../assets/img/Di-3d.png\";\nlet texture: Texture;\nloadImage(imageUrl, function (image)\n{\n    texture = {\n        size: [image.width, image.height],\n        format: \"rgba8unorm\",\n        sources: [{ image, mipLevel: 0 }],\n        generateMipmap: true,\n    };\n\n    render();\n});\n\nfunction render()\n{\n    // Clear color buffer\n    const matrix = new Float32Array([\n        1.0, 0.0, 0.0, 0.0,\n        0.0, 1.0, 0.0, 0.0,\n        0.0, 0.0, 1.0, 0.0,\n        0.0, 0.0, 0.0, 1.0\n    ]);\n\n    const renderObjects: RenderPassObject[] = [];\n    const rp: RenderPass = {\n        descriptor: { colorAttachments: [{ clearValue: [0.0, 0.0, 0.0, 1.0], loadOp: \"clear\" }] },\n        renderObjects\n    };\n\n    const ro: RenderObject = {\n        pipeline: program,\n        bindingResources: { mvp: matrix },\n        geometry: {\n            primitive: { topology: \"triangle-list\" },\n            vertices: vertexArray.vertices,\n            draw: { __type__: \"DrawVertex\", vertexCount: 6, instanceCount: 1 },\n        }\n    };\n\n    // Bind samplers\n    for (let i = 0; i < Corners.MAX; ++i)\n    {\n        renderObjects.push(\n            {\n                ...ro,\n                viewport: { x: viewport[i].x, y: viewport[i].y, width: viewport[i].z, height: viewport[i].w },\n                bindingResources: {\n                    ...ro.bindingResources,\n                    diffuse: {\n                        texture, sampler: samplers[i]\n                    }\n                }\n            });\n    }\n\n    webgl.submit({ commandEncoders: [{ passEncoders: [rp] }] });\n\n    // Clean up\n    for (let j = 0; j < samplers.length; ++j)\n    {\n        webgl.deleteSampler(samplers[(j + 1) % samplers.length]);\n    }\n    webgl.deleteTexture(texture);\n    webgl.deleteProgram(program);\n}\n"],"names":["canvas","rc","webgl","WebGL","windowSize","Corners","viewport","program","getShaderSource","positions","texcoords","vertexArray","samplers","i","imageUrl","texture","loadImage","image","render","matrix","renderObjects","rp","ro","j"],"mappings":"kJAIA,MAAMA,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,GAAK,WACZA,EAAO,MAAQ,KAAK,IAAI,OAAO,WAAY,OAAO,WAAW,EAC7DA,EAAO,OAASA,EAAO,MACvB,SAAS,KAAK,YAAYA,CAAM,EAEhC,MAAMC,EAAoB,CAAE,SAAU,WAAY,eAAgB,QAAS,EACrEC,EAAQ,IAAIC,EAAMF,CAAE,EAIpBG,EAAa,CACf,EAAGJ,EAAO,MACV,EAAGA,EAAO,MACd,EAEMK,EAAU,CACZ,SAAU,EACV,UAAW,EACX,aAAc,EACd,YAAa,EACb,IAAK,CACT,EAEMC,EAA6D,IAAI,MAAMD,EAAQ,GAAG,EAExFC,EAASD,EAAQ,WAAW,EAAI,CAC5B,EAAG,EACH,EAAG,EACH,EAAGD,EAAW,EAAI,EAClB,EAAGA,EAAW,EAAI,CACtB,EAEAE,EAASD,EAAQ,YAAY,EAAI,CAC7B,EAAGD,EAAW,EAAI,EAClB,EAAG,EACH,EAAGA,EAAW,EAAI,EAClB,EAAGA,EAAW,EAAI,CACtB,EAEAE,EAASD,EAAQ,SAAS,EAAI,CAC1B,EAAGD,EAAW,EAAI,EAClB,EAAGA,EAAW,EAAI,EAClB,EAAGA,EAAW,EAAI,EAClB,EAAGA,EAAW,EAAI,CACtB,EAEAE,EAASD,EAAQ,QAAQ,EAAI,CACzB,EAAG,EACH,EAAGD,EAAW,EAAI,EAClB,EAAGA,EAAW,EAAI,EAClB,EAAGA,EAAW,EAAI,CACtB,EAIA,MAAMG,EAA0B,CAC5B,OAAQ,CAAE,KAAMC,EAAgB,IAAI,CAAE,EAAG,SAAU,CAAE,KAAMA,EAAgB,IAAI,CAAE,CACrF,EAIMC,EAAY,IAAI,aAAa,CAC/B,GAAM,GACN,EAAK,GACL,EAAK,EACL,EAAK,EACL,GAAM,EACN,GAAM,EACV,CAAC,EAEKC,EAAY,IAAI,aAAa,CAC/B,EAAK,EACL,EAAK,EACL,EAAK,EACL,EAAK,EACL,EAAK,EACL,EAAK,CACT,CAAC,EAIKC,EAA+C,CACjD,SAAU,CACN,SAAU,CAAE,KAAMF,EAAW,OAAQ,WAAY,EACjD,mBAAoB,CAAE,KAAMC,EAAW,OAAQ,WAAY,CAC/D,CACJ,EAIME,EAAsB,IAAI,MAAMP,EAAQ,GAAG,EACjD,QAASQ,EAAI,EAAGA,EAAIR,EAAQ,IAAK,EAAEQ,EAEtBD,EAAAC,CAAC,EAAI,CAAE,aAAc,gBAAiB,aAAc,gBAAiB,aAAc,iBAIhGD,EAASP,EAAQ,QAAQ,EAAE,UAAY,UACvCO,EAASP,EAAQ,SAAS,EAAE,UAAY,SACxCO,EAASP,EAAQ,YAAY,EAAE,UAAY,SAC3CO,EAASP,EAAQ,WAAW,EAAE,UAAY,SAG1CO,EAASP,EAAQ,QAAQ,EAAE,UAAY,UACvCO,EAASP,EAAQ,SAAS,EAAE,UAAY,SACxCO,EAASP,EAAQ,YAAY,EAAE,UAAY,SAC3CO,EAASP,EAAQ,WAAW,EAAE,UAAY,SAG1CO,EAASP,EAAQ,YAAY,EAAE,aAAe,UAC9CO,EAASP,EAAQ,WAAW,EAAE,aAAe,SAI7C,MAAMS,EAAW,6BACjB,IAAIC,EACJC,EAAUF,EAAU,SAAUG,EAC9B,CACcF,EAAA,CACN,KAAM,CAACE,EAAM,MAAOA,EAAM,MAAM,EAChC,OAAQ,aACR,QAAS,CAAC,CAAE,MAAAA,EAAO,SAAU,EAAG,EAChC,eAAgB,EAAA,EAGbC,GACX,CAAC,EAED,SAASA,GACT,CAEU,MAAAC,EAAS,IAAI,aAAa,CAC5B,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EAAK,CAAA,CAClB,EAEKC,EAAoC,CAAA,EACpCC,EAAiB,CACnB,WAAY,CAAE,iBAAkB,CAAC,CAAE,WAAY,CAAC,EAAK,EAAK,EAAK,CAAG,EAAG,OAAQ,OAAS,CAAA,CAAE,EACxF,cAAAD,CAAA,EAGEE,EAAmB,CACrB,SAAUf,EACV,iBAAkB,CAAE,IAAKY,CAAO,EAChC,SAAU,CACN,UAAW,CAAE,SAAU,eAAgB,EACvC,SAAUR,EAAY,SACtB,KAAM,CAAE,SAAU,aAAc,YAAa,EAAG,cAAe,CAAE,CACrE,CAAA,EAIJ,QAASE,EAAI,EAAGA,EAAIR,EAAQ,IAAK,EAAEQ,EAEjBO,EAAA,KACV,CACI,GAAGE,EACH,SAAU,CAAE,EAAGhB,EAASO,CAAC,EAAE,EAAG,EAAGP,EAASO,CAAC,EAAE,EAAG,MAAOP,EAASO,CAAC,EAAE,EAAG,OAAQP,EAASO,CAAC,EAAE,CAAE,EAC5F,iBAAkB,CACd,GAAGS,EAAG,iBACN,QAAS,CACL,QAAAP,EAAS,QAASH,EAASC,CAAC,CAChC,CACJ,CACJ,CAAA,EAGFX,EAAA,OAAO,CAAE,gBAAiB,CAAC,CAAE,aAAc,CAACmB,CAAE,EAAG,CAAA,CAAG,EAG1D,QAASE,EAAI,EAAGA,EAAIX,EAAS,OAAQ,EAAEW,EAEnCrB,EAAM,cAAcU,GAAUW,EAAI,GAAKX,EAAS,MAAM,CAAC,EAE3DV,EAAM,cAAca,CAAO,EAC3Bb,EAAM,cAAcK,CAAO,CAC/B"}