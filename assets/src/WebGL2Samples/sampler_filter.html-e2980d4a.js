import"../../modulepreload-polyfill-3cfb730f.js";import{g as T,l as g}from"../../utility-e972c1ee.js";import{W as O}from"../../WebGL-b4686ab5.js";const a=document.createElement("canvas");a.id="glcanvas";a.width=Math.min(window.innerWidth,window.innerHeight);a.height=a.width;document.body.appendChild(a);const w={canvasId:"glcanvas",webGLcontextId:"webgl2"},s=new O(w),r={x:a.width,y:a.height},e={TOP_LEFT:0,TOP_RIGHT:1,BOTTOM_RIGHT:2,BOTTOM_LEFT:3,MAX:4},i=new Array(e.MAX);i[e.BOTTOM_LEFT]={x:0,y:0,z:r.x/2,w:r.y/2};i[e.BOTTOM_RIGHT]={x:r.x/2,y:0,z:r.x/2,w:r.y/2};i[e.TOP_RIGHT]={x:r.x/2,y:r.y/2,z:r.x/2,w:r.y/2};i[e.TOP_LEFT]={x:0,y:r.y/2,z:r.x/2,w:r.y/2};const m={vertex:{code:T("vs")},fragment:{code:T("fs")}},x=new Float32Array([-1,-1,1,-1,1,1,1,1,-1,1,-1,-1]),y=new Float32Array([0,1,1,1,1,0,1,0,0,0,0,1]),h={vertices:{position:{data:x,format:"float32x2"},textureCoordinates:{data:y,format:"float32x2"}}},t=new Array(e.MAX);for(let o=0;o<e.MAX;++o)t[o]={addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge",addressModeW:"clamp-to-edge"};t[e.TOP_LEFT].minFilter="nearest";t[e.TOP_RIGHT].minFilter="linear";t[e.BOTTOM_RIGHT].minFilter="linear";t[e.BOTTOM_LEFT].minFilter="linear";t[e.TOP_LEFT].magFilter="nearest";t[e.TOP_RIGHT].magFilter="linear";t[e.BOTTOM_RIGHT].magFilter="linear";t[e.BOTTOM_LEFT].magFilter="linear";t[e.BOTTOM_RIGHT].mipmapFilter="nearest";t[e.BOTTOM_LEFT].mipmapFilter="linear";const F="../../assets/img/Di-3d.png";let l;g(F,function(o){l={size:[o.width,o.height],format:"rgba8unorm",sources:[{image:o,mipLevel:0}],generateMipmap:!0},_()});function _(){const o=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),d=[],p={descriptor:{colorAttachments:[{clearValue:[0,0,0,1],loadOp:"clear"}]},renderObjects:d},c={pipeline:m,bindingResources:{mvp:o},geometry:{primitive:{topology:"triangle-list"},vertices:h.vertices,draw:{__type__:"DrawVertex",vertexCount:6,instanceCount:1}}};for(let n=0;n<e.MAX;++n)d.push({...c,viewport:{x:i[n].x,y:i[n].y,width:i[n].z,height:i[n].w},bindingResources:{...c.bindingResources,diffuse:{texture:l,sampler:t[n]}}});s.submit({commandEncoders:[{passEncoders:[p]}]});for(let n=0;n<t.length;++n)s.deleteSampler(t[(n+1)%t.length]);s.deleteTexture(l),s.deleteProgram(m)}
//# sourceMappingURL=sampler_filter.html-e2980d4a.js.map
