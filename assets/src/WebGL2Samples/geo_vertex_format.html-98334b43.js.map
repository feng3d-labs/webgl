{"version":3,"file":"geo_vertex_format.html-98334b43.js","sources":["../../../../examples/src/WebGL2Samples/third-party/HalfFloatUtility.ts","../../../../examples/src/WebGL2Samples/geo_vertex_format.ts"],"sourcesContent":["// @ts-ignore\n\nexport const HalfFloat: { encodeFloat16AsInt16: (value: number) => number, Float16Array: (numArray: number[]) => Int16Array } = {};\n\n(function ()\n{\n    let exponent = 0;\n    let mantissa = 0;\n\n    let bits = 0;\n\n    const data64 = new DataView(new ArrayBuffer(8));\n    const data16 = new DataView(new ArrayBuffer(2));\n\n    const UNIT_VALUE = 1 / 1024;\n\n    // http://stackoverflow.com/questions/28688838/convert-a-number-into-a-16-bit-float-stored-as-bytes-and-back\n    // http://croquetweak.blogspot.de/2014/08/deconstructing-floats-frexp-and-ldexp.html\n    function frexp(value)\n    {\n        if (value === 0)\n        {\n            mantissa = 0;\n            exponent = 0;\n\n            return;\n        }\n        data64.setFloat64(0, value);\n        bits = (data64.getUint32(0) >>> 20) & 0x7FF;\n        if (bits === 0)\n        {\n            data64.setFloat64(0, value * Math.pow(2, 64));\n            bits = ((data64.getUint32(0) >>> 20) & 0x7FF) - 64;\n        }\n        exponent = bits - 1022;\n        mantissa = ldexp(value, -exponent);\n    }\n\n    function ldexp(f, e)\n    {\n        // avoid multiplying by infinity and zero\n        return e > 1023 ? f * Math.pow(2, 1023) * Math.pow(2, e - 1023)\n            : e < -1074 ? f * Math.pow(2, -1074) * Math.pow(2, e + 1074) : f * Math.pow(2, e);\n    }\n\n    let signBit;\n    let sign;\n    let exp;\n    let frac;\n    HalfFloat.encodeFloat16AsInt16 = function (value: number): number\n    {\n        // Inf unhandled here\n\n        // https://en.wikipedia.org/wiki/Half-precision_floating-point_format\n        frexp(value);\n\n        if (mantissa === 0)\n        {\n            // zero\n            data16.setInt16(0, 0);\n\n            return data16.getInt16(0);\n        }\n\n        signBit = mantissa < 0 ? 1 : 0;\n        sign = signBit << 15;\n        exp = 0;\n        frac = 0;\n\n        if (exponent <= -14)\n        {\n            // subnormal value\n            frac = Math.abs(mantissa * Math.pow(2, exponent + 14)) / UNIT_VALUE;\n            data16.setInt16(0, sign + exp + frac);\n\n            return data16.getInt16(0);\n        }\n\n        // normalized value\n        if (mantissa < 1.0)\n        {\n            mantissa = mantissa * 2 - 1;\n            exponent = exponent - 1;\n        }\n\n        exp = (exponent + 15) << 10;\n        frac = Math.abs(mantissa) / UNIT_VALUE;\n\n        data16.setInt16(0, sign + exp + frac);\n\n        return data16.getInt16(0);\n    };\n\n    /**\n     * Returns a float 16 array buffer which is actually encoded as Int16Array\n     * @param numArray: javaScript number Array\n     */\n    let i;\n    HalfFloat.Float16Array = function (numArray: number[]): Int16Array\n    {\n        const float16Array = new Int16Array(new ArrayBuffer(2 * numArray.length));\n        const tmpArray = new Array(numArray.length);\n        for (i = 0; i < numArray.length; ++i)\n        {\n            tmpArray[i] = HalfFloat.encodeFloat16AsInt16(numArray[i]);\n        }\n        float16Array.set(tmpArray, 0);\n\n        return float16Array;\n    };\n})();","import { CanvasContext, RenderObject, RenderPass, RenderPipeline, Sampler, Texture, VertexAttributes } from \"@feng3d/render-api\";\nimport { WebGL } from \"@feng3d/webgl\";\nimport { mat4, vec3 } from \"gl-matrix\";\nimport { HalfFloat } from \"./third-party/HalfFloatUtility\";\nimport { getShaderSource, loadImage } from \"./utility\";\n\n(function ()\n{\n    const canvas = document.createElement(\"canvas\");\n    canvas.id = \"glcanvas\";\n    canvas.width = Math.min(window.innerWidth, window.innerHeight);\n    canvas.height = canvas.width;\n    document.body.appendChild(canvas);\n\n    const rc: CanvasContext = { canvasId: \"glcanvas\", webGLcontextId: \"webgl2\", webGLContextAttributes: { antialias: false } };\n    const webgl = new WebGL(rc);\n\n    // -- Init program\n    const program: RenderPipeline = {\n        vertex: { code: getShaderSource(\"vs\") }, fragment: { code: getShaderSource(\"fs\") },\n        depthStencil: {},\n    };\n\n    // -- Init geometries\n    const positions = new Float32Array([\n        // Front face\n        -1.0, -1.0, 1.0,\n        1.0, -1.0, 1.0,\n        1.0, 1.0, 1.0,\n        -1.0, 1.0, 1.0,\n\n        // Back face\n        -1.0, -1.0, -1.0,\n        -1.0, 1.0, -1.0,\n        1.0, 1.0, -1.0,\n        1.0, -1.0, -1.0,\n\n        // Top face\n        -1.0, 1.0, -1.0,\n        -1.0, 1.0, 1.0,\n        1.0, 1.0, 1.0,\n        1.0, 1.0, -1.0,\n\n        // Bottom face\n        -1.0, -1.0, -1.0,\n        1.0, -1.0, -1.0,\n        1.0, -1.0, 1.0,\n        -1.0, -1.0, 1.0,\n\n        // Right face\n        1.0, -1.0, -1.0,\n        1.0, 1.0, -1.0,\n        1.0, 1.0, 1.0,\n        1.0, -1.0, 1.0,\n\n        // Left face\n        -1.0, -1.0, -1.0,\n        -1.0, -1.0, 1.0,\n        -1.0, 1.0, 1.0,\n        -1.0, 1.0, -1.0\n    ]);\n\n    const normals = HalfFloat.Float16Array([\n        // Front face\n        0, 0, -1,\n        0, 0, -1,\n        0, 0, -1,\n        0, 0, -1,\n\n        // Back face\n        0, 0, 1,\n        0, 0, 1,\n        0, 0, 1,\n        0, 0, 1,\n\n        // Top face\n        0, 1, 0,\n        0, 1, 0,\n        0, 1, 0,\n        0, 1, 0,\n\n        // Bottom face\n        0, -1, 0,\n        0, -1, 0,\n        0, -1, 0,\n        0, -1, 0,\n\n        // Right face\n        -1, 0, 0,\n        -1, 0, 0,\n        -1, 0, 0,\n        -1, 0, 0,\n\n        // Left face\n        1, 0, 0,\n        1, 0, 0,\n        1, 0, 0,\n        1, 0, 0\n    ]);\n\n    const texCoords = HalfFloat.Float16Array([\n        // Front face\n        0.0, 0.0,\n        0.0, 1.0,\n        1.0, 1.0,\n        1.0, 0.0,\n\n        // Back face\n        1.0, 1.0,\n        1.0, 0.0,\n        0.0, 0.0,\n        0.0, 1.0,\n\n        // Top face\n        0.0, 0.0,\n        0.0, 1.0,\n        1.0, 1.0,\n        1.0, 0.0,\n\n        // Bottom face\n        0.0, 0.0,\n        0.0, 1.0,\n        1.0, 1.0,\n        1.0, 0.0,\n\n        // Right face\n        0.0, 0.0,\n        0.0, 1.0,\n        1.0, 1.0,\n        1.0, 0.0,\n\n        // Left face\n        0.0, 0.0,\n        0.0, 1.0,\n        1.0, 1.0,\n        1.0, 0.0\n    ]);\n\n    // Element buffer\n\n    const cubeVertexIndices = [\n        0, 1, 2, 0, 2, 3, // front\n        4, 5, 6, 4, 6, 7, // back\n        8, 9, 10, 8, 10, 11, // top\n        12, 13, 14, 12, 14, 15, // bottom\n        16, 17, 18, 16, 18, 19, // right\n        20, 21, 22, 20, 22, 23 // left\n    ];\n\n    // -- Init VertexArray\n\n    const vertexArray: { vertices?: VertexAttributes } = {\n        vertices: {\n            a_position: { data: positions, format: \"float32x3\" },\n            a_normal: { data: normals, format: \"float16x4\", arrayStride: 6 }, // 由于不支持类型 \"float16x3\"，则需要设置 arrayStride 为6，表示每次间隔3个半浮点数。\n            a_texCoord: { data: texCoords, format: \"float16x2\" },\n        },\n    };\n\n    // -- Init Texture\n\n    const imageUrl = \"../../assets/img/Di-3d.png\";\n    let texture: Texture;\n    let sampler: Sampler;\n    loadImage(imageUrl, function (image)\n    {\n        // -- Init 2D Texture\n        texture = {\n            format: \"rgba8unorm\",\n            mipLevelCount: 1,\n            size: [512, 512],\n            sources: [{ image, flipY: false }],\n        };\n        sampler = {\n            minFilter: \"nearest\",\n            magFilter: \"nearest\",\n            addressModeU: \"clamp-to-edge\",\n            addressModeV: \"clamp-to-edge\",\n        };\n\n        requestAnimationFrame(render);\n    });\n\n    // -- Initialize render variables\n    const orientation = [0.0, 0.0, 0.0];\n\n    const modelMatrix = mat4.create();\n\n    const viewMatrix = mat4.create();\n    const translate = vec3.create();\n    vec3.set(translate, 0, 0, -10);\n    mat4.translate(viewMatrix, modelMatrix, translate);\n    const perspectiveMatrix = mat4.create();\n    mat4.perspective(perspectiveMatrix, 0.785, 1, 1, 1000);\n    const viewProj = mat4.create();\n\n    const modelInvTrans = mat4.create();\n    mat4.transpose(modelInvTrans, modelMatrix);\n    mat4.invert(modelInvTrans, modelInvTrans);\n\n    const lightPosition = [0.0, 0.0, 5.0];\n\n    const ro: RenderObject = {\n        pipeline: program,\n        bindingResources: {\n            u_model: modelMatrix,\n            u_modelInvTrans: modelInvTrans,\n            u_lightPosition: lightPosition,\n            u_ambient: 0.1,\n        },\n        geometry: {\n            primitive: { topology: \"triangle-list\", cullFace: \"back\" },\n            vertices: vertexArray.vertices,\n            indices: new Uint16Array(cubeVertexIndices),\n            draw: { __type__: \"DrawIndexed\", indexCount: 36 },\n        }\n    };\n\n    const rp: RenderPass = {\n        descriptor: { colorAttachments: [{ clearValue: [0.0, 0.0, 0.0, 1.0], loadOp: \"clear\" }] },\n        renderObjects: [ro],\n    };\n\n    function render()\n    {\n        // -- Render\n        orientation[0] = 0.0050; // yaw\n        orientation[1] = 0.0030; // pitch\n        orientation[2] = 0.0009; // roll\n\n        mat4.rotateX(viewMatrix, viewMatrix, orientation[0] * Math.PI);\n        mat4.rotateY(viewMatrix, viewMatrix, orientation[1] * Math.PI);\n        mat4.rotateZ(viewMatrix, viewMatrix, orientation[2] * Math.PI);\n        mat4.multiply(viewProj, perspectiveMatrix, viewMatrix);\n\n        //\n        ro.bindingResources.u_viewProj = viewProj;\n        ro.bindingResources.s_tex2D = { texture, sampler };\n\n        webgl.submit({ commandEncoders: [{ passEncoders: [rp] }] });\n\n        requestAnimationFrame(render);\n\n        // If you have a long-running page, and need to delete WebGL resources, use:\n        //\n        // gl.deleteBuffer(vertexPosBuffer);\n        // gl.deleteBuffer(vertexTexBuffer);\n        // gl.deleteBuffer(indexBuffer);\n        // gl.deleteTexture(texture);\n        // gl.deleteProgram(program);\n        // gl.deleteVertexArray(vertexArray);\n    }\n})();\n"],"names":["HalfFloat","exponent","mantissa","bits","data64","data16","UNIT_VALUE","frexp","value","ldexp","f","signBit","sign","exp","frac","i","numArray","float16Array","tmpArray","canvas","rc","webgl","WebGL","program","getShaderSource","positions","normals","texCoords","cubeVertexIndices","vertexArray","imageUrl","texture","sampler","loadImage","image","render","orientation","modelMatrix","mat4.create","viewMatrix","translate","vec3.create","vec3.set","mat4.translate","perspectiveMatrix","mat4.perspective","viewProj","modelInvTrans","mat4.transpose","mat4.invert","ro","rp","mat4.rotateX","mat4.rotateY","mat4.rotateZ","mat4.multiply"],"mappings":"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"}