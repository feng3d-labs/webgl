import"../../modulepreload-polyfill-3cfb730f.js";import{g as m,l as O}from"../../utility-e972c1ee.js";import{r as a}from"../../index-1ea29437.js";import{W as w}from"../../WebGL-b4686ab5.js";const s=document.createElement("canvas");s.id="glcanvas";s.width=Math.min(window.innerWidth,window.innerHeight);s.height=s.width;document.body.appendChild(s);const x={canvasId:"glcanvas",webGLcontextId:"webgl2"},l=new w(x),r={x:s.width,y:s.height},e={TOP_LEFT:0,TOP_RIGHT:1,BOTTOM_RIGHT:2,BOTTOM_LEFT:3,MAX:4},o=new Array(e.MAX);o[e.BOTTOM_LEFT]={x:0,y:0,z:r.x/2,w:r.y/2};o[e.BOTTOM_RIGHT]={x:r.x/2,y:0,z:r.x/2,w:r.y/2};o[e.TOP_RIGHT]={x:r.x/2,y:r.y/2,z:r.x/2,w:r.y/2};o[e.TOP_LEFT]={x:0,y:r.y/2,z:r.x/2,w:r.y/2};const p={vertex:{code:m("vs")},fragment:{code:m("fs")},primitive:{topology:"triangle-list"}},h=new Float32Array([-1,-1,1,-1,1,1,1,1,-1,1,-1,-1]),y=new Float32Array([0,1,1,1,1,0,1,0,0,0,0,1]),F={vertices:{position:{data:h,format:"float32x2"},textureCoordinates:{data:y,format:"float32x2"}}},t=new Array(e.MAX);for(let i=0;i<e.MAX;++i)t[i]={addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge",addressModeW:"clamp-to-edge"};a(t[e.TOP_LEFT]).minFilter="nearest";a(t[e.TOP_RIGHT]).minFilter="linear";a(t[e.BOTTOM_RIGHT]).minFilter="linear";a(t[e.BOTTOM_LEFT]).minFilter="linear";a(t[e.TOP_LEFT]).magFilter="nearest";a(t[e.TOP_RIGHT]).magFilter="linear";a(t[e.BOTTOM_RIGHT]).magFilter="linear";a(t[e.BOTTOM_LEFT]).magFilter="linear";a(t[e.BOTTOM_RIGHT]).mipmapFilter="nearest";a(t[e.BOTTOM_LEFT]).mipmapFilter="linear";const _="../../assets/img/Di-3d.png";let c;O(_,function(i){c={size:[i.width,i.height],format:"rgba8unorm",sources:[{image:i,mipLevel:0}],generateMipmap:!0},u()});function u(){const i=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),d=[],g={descriptor:{colorAttachments:[{clearValue:[0,0,0,1],loadOp:"clear"}]},renderPassObjects:d},T={pipeline:p,bindingResources:{mvp:i},vertices:F.vertices,draw:{__type__:"DrawVertex",vertexCount:6,instanceCount:1}};for(let n=0;n<e.MAX;++n)d.push({...T,viewport:{x:o[n].x,y:o[n].y,width:o[n].z,height:o[n].w},bindingResources:{...T.bindingResources,diffuse:{texture:c,sampler:t[n]}}});l.submit({commandEncoders:[{passEncoders:[g]}]});for(let n=0;n<t.length;++n)l.deleteSampler(t[(n+1)%t.length]);l.deleteTexture(c),l.deleteProgram(p)}
//# sourceMappingURL=sampler_filter.html-30460a71.js.map
