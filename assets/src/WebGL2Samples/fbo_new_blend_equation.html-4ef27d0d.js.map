{"version":3,"file":"fbo_new_blend_equation.html-4ef27d0d.js","sources":["../../../../examples/src/WebGL2Samples/fbo_new_blend_equation.ts"],"sourcesContent":["import { CanvasContext, RenderPassObject, RenderObject, RenderPass, RenderPipeline, Sampler, Texture, VertexAttributes, Viewport } from \"@feng3d/render-api\";\nimport { WebGL } from \"@feng3d/webgl\";\n\nimport { getShaderSource, loadImage } from \"./utility\";\n\nconst canvas = document.createElement(\"canvas\");\ncanvas.id = \"glcanvas\";\ncanvas.width = Math.min(window.innerWidth, window.innerHeight);\ncanvas.height = canvas.width;\ndocument.body.appendChild(canvas);\n\nconst renderingContext: CanvasContext = { canvasId: \"glcanvas\", webGLcontextId: \"webgl2\" };\nconst webgl = new WebGL(renderingContext);\n\n// -- Divide viewport\n\nconst windowSize = {\n    x: canvas.width,\n    y: canvas.height\n};\n\nconst Corners = {\n    TOP_LEFT: 0,\n    TOP_RIGHT: 1,\n    BOTTOM_RIGHT: 2,\n    BOTTOM_LEFT: 3,\n    MAX: 4\n};\n\nconst viewport = new Array(Corners.MAX);\n\nviewport[Corners.BOTTOM_LEFT] = {\n    x: 0,\n    y: 0,\n    z: windowSize.x / 2,\n    w: windowSize.y / 2\n};\n\nviewport[Corners.BOTTOM_RIGHT] = {\n    x: windowSize.x / 2,\n    y: 0,\n    z: windowSize.x / 2,\n    w: windowSize.y / 2\n};\n\nviewport[Corners.TOP_RIGHT] = {\n    x: windowSize.x / 2,\n    y: windowSize.y / 2,\n    z: windowSize.x / 2,\n    w: windowSize.y / 2\n};\n\nviewport[Corners.TOP_LEFT] = {\n    x: 0,\n    y: windowSize.y / 2,\n    z: windowSize.x / 2,\n    w: windowSize.y / 2\n};\n\n// -- Initialize program\n\nconst program: RenderPipeline = {\n    vertex: { code: getShaderSource(\"vs\") },\n    fragment: { code: getShaderSource(\"fs\"), targets: [{ blend: {} }] },\n};\n\n// -- Initialize buffer\nconst positions = new Float32Array([\n    -1.0, -1.0,\n    1.0, -1.0,\n    1.0, 1.0,\n    1.0, 1.0,\n    -1.0, 1.0,\n    -1.0, -1.0\n]);\n\nconst texcoords = new Float32Array([\n    0.0, 1.0,\n    1.0, 1.0,\n    1.0, 0.0,\n    1.0, 0.0,\n    0.0, 0.0,\n    0.0, 1.0\n]);\n\n// -- Initilize vertex array\nconst vertexArray: { vertices?: VertexAttributes } = {\n    vertices: {\n        position: { data: positions, format: \"float32x2\" },\n        textureCoordinates: { data: texcoords, format: \"float32x2\" },\n    }\n};\n\n// -- Load texture then render\nconst sampler: Sampler = {\n    minFilter: \"linear\",\n    magFilter: \"linear\"\n};\nconst imageUrl = \"../../assets/img/Di-3d.png\";\nlet texture: Texture;\nloadImage(imageUrl, function (image)\n{\n    texture = {\n        size: [image.width, image.height],\n        sources: [{ image, mipLevel: 0 }],\n        format: \"rgba8unorm\",\n        generateMipmap: true,\n    };\n\n    render();\n});\n\nfunction render()\n{\n    const matrix = new Float32Array([\n        1.0, 0.0, 0.0, 0.0,\n        0.0, 1.0, 0.0, 0.0,\n        0.0, 0.0, 1.0, 0.0,\n        0.0, 0.0, 0.0, 1.0\n    ]);\n\n    const renderObject: RenderObject = {\n        pipeline: program,\n        bindingResources: { mvp: matrix, diffuse: { texture, sampler } },\n        geometry: {\n            vertices: vertexArray.vertices,\n            draw: { __type__: \"DrawVertex\", vertexCount: 6 },\n        }\n    };\n\n    const renderObjects: RenderPassObject[] = [];\n    const renderPass: RenderPass = {\n        descriptor: { colorAttachments: [{ clearValue: [0.5, 0.0, 0.0, 1.0], loadOp: \"clear\" }] },\n        renderObjects,\n    };\n\n    for (let i = 0; i < Corners.MAX; ++i)\n    {\n        const viewport0: Viewport = { x: viewport[i].x, y: viewport[i].y, width: viewport[i].z, height: viewport[i].w };\n\n        if (i === Corners.TOP_LEFT)\n        {\n            //pass\n        }\n        else if (i === Corners.TOP_RIGHT)\n        {\n            renderObjects.push(\n                {\n                    ...renderObject,\n                    viewport: viewport0,\n                });\n        }\n        else if (i === Corners.BOTTOM_RIGHT)\n        {\n            renderObjects.push(\n                {\n                    ...renderObject,\n                    viewport: viewport0,\n                    pipeline: {\n                        ...program, fragment: {\n                            ...program.fragment,\n                            targets: [{\n                                ...program.fragment.targets[0],\n                                blend: {\n                                    ...program.fragment.targets[0].blend,\n                                    color: { ...program.fragment.targets[0].blend.color, operation: \"min\" },\n                                    alpha: { ...program.fragment.targets[0].blend.alpha, operation: \"min\" },\n                                },\n                            }]\n                        }\n                    },\n                });\n        }\n        else if (i === Corners.BOTTOM_LEFT)\n        {\n            renderObjects.push(\n                {\n                    ...renderObject,\n                    viewport: viewport0,\n                    pipeline: {\n                        ...program, fragment: {\n                            ...program.fragment,\n                            targets: [{\n                                ...program.fragment.targets[0],\n                                blend: {\n                                    ...program.fragment.targets[0].blend,\n                                    color: { ...program.fragment.targets[0].blend.color, operation: \"max\" },\n                                    alpha: { ...program.fragment.targets[0].blend.alpha, operation: \"max\" },\n                                },\n                            }]\n                        }\n                    },\n                });\n        }\n    }\n\n    webgl.submit({ commandEncoders: [{ passEncoders: [renderPass] }] });\n\n    // -- Clean up\n    webgl.deleteTexture(texture);\n    webgl.deleteProgram(program);\n}"],"names":["canvas","renderingContext","webgl","WebGL","windowSize","Corners","viewport","program","getShaderSource","positions","texcoords","vertexArray","sampler","imageUrl","texture","loadImage","image","render","matrix","renderObject","renderObjects","renderPass","i","viewport0"],"mappings":"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"}