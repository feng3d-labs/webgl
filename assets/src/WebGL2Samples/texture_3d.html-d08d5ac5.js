import"../../modulepreload-polyfill-3cfb730f.js";import{g as T}from"../../utility-e972c1ee.js";import{W as z}from"../../WebGL-b4686ab5.js";import{s as E}from"../../noise3D-c3a3e7b7.js";import"../../vec3-5d562fd8.js";import"../../common-d8a29b8a.js";(function(){const c=document.createElement("canvas");c.id="glcanvas",c.width=Math.min(window.innerWidth,window.innerHeight),c.height=c.width,document.body.appendChild(c);const f={canvasId:"glcanvas",webGLcontextId:"webgl2"},g=new z(f),o={x:c.width,y:c.height},l={TOP_LEFT:0,TOP_RIGHT:1,BOTTOM_RIGHT:2,BOTTOM_LEFT:3,MAX:4},s=new Array(l.MAX);s[l.BOTTOM_LEFT]={x:0,y:0,z:o.x/2,w:o.y/2},s[l.BOTTOM_RIGHT]={x:o.x/2,y:0,z:o.x/2,w:o.y/2},s[l.TOP_RIGHT]={x:o.x/2,y:o.y/2,z:o.x/2,w:o.y/2},s[l.TOP_LEFT]={x:0,y:o.y/2,z:o.x/2,w:o.y/2};const t=32,M=new Uint8Array(t*t*t);for(let e=0;e<t;++e)for(let r=0;r<t;++r)for(let a=0;a<t;++a)M[a+r*t+e*t*t]=E([a,r,e])*256;const _={size:[t,t,t],dimension:"3d",format:"r8unorm",generateMipmap:!0,sources:[{__type__:"TextureDataSource",mipLevel:0,size:[t,t,t],data:M}]},A={lodMinClamp:0,lodMaxClamp:Math.log2(t),minFilter:"linear",magFilter:"linear",mipmapFilter:"linear"},v={vertex:{code:T("vs")},fragment:{code:T("fs")}},F=new Float32Array([-1,-1,1,-1,1,1,1,1,-1,1,-1,-1]),O=new Float32Array([0,1,1,1,1,0,1,0,0,0,0,1]),b={vertices:{position:{data:F,format:"float32x2"},in_texcoord:{data:O,format:"float32x2"}}},n=[0,0,0];requestAnimationFrame(u);function h(e,r,a){const d=Math.cos(e),m=Math.sin(e),i=Math.cos(r),w=Math.sin(r),p=Math.cos(a),x=Math.sin(a);return[d*i,d*w*x-m*p,d*w*p+m*x,0,m*i,m*w*x+d*p,m*w*p-d*x,0,-w,i*x,i*p,0,0,0,0,1]}const R={pipeline:v,bindingResources:{diffuse:{texture:_,sampler:A}},geometry:{vertices:b.vertices,draw:{__type__:"DrawVertex",vertexCount:6}}},y=[];for(let e=0;e<l.MAX;++e)y.push({...R,viewport:{x:s[e].x,y:s[e].y,width:s[e].z,height:s[e].w}});const P={descriptor:{colorAttachments:[{clearValue:[0,0,0,1],loadOp:"clear"}]},renderObjects:y};function u(){n[0]+=.02,n[1]+=.01,n[2]+=.005;const e=new Float32Array(h(n[0],0,0)),r=new Float32Array(h(0,n[1],0)),a=new Float32Array(h(0,0,n[2])),d=new Float32Array(h(n[0],n[1],n[2])),m=[e,r,a,d];for(let i=0;i<l.MAX;++i)y[i].bindingResources.orientation=m[i];g.submit({commandEncoders:[{passEncoders:[P]}]}),requestAnimationFrame(u)}})();
//# sourceMappingURL=texture_3d.html-d08d5ac5.js.map
