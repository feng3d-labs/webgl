import"../../modulepreload-polyfill-3cfb730f.js";import{g as l,l as w}from"../../utility-e972c1ee.js";import{W as g}from"../../WebGL-b4686ab5.js";const n=document.createElement("canvas");n.id="glcanvas";n.width=Math.min(window.innerWidth,window.innerHeight);n.height=n.width;document.body.appendChild(n);const x={canvasId:"glcanvas",webGLcontextId:"webgl2",webGLContextAttributes:{antialias:!1}},i=new g(x),t={x:n.width,y:n.height},e={TOP_LEFT:0,TOP_RIGHT:1,BOTTOM_RIGHT:2,BOTTOM_LEFT:3,MAX:4},s=new Array(e.MAX);s[e.BOTTOM_LEFT]={x:0,y:0,z:t.x/2,w:t.y/2};s[e.BOTTOM_RIGHT]={x:t.x/2,y:0,z:t.x/2,w:t.y/2};s[e.TOP_RIGHT]={x:t.x/2,y:t.y/2,z:t.x/2,w:t.y/2-60};s[e.TOP_LEFT]={x:0,y:t.y/2,z:t.x/2,w:t.y/2-60};const m={vertex:{code:l("vs")},fragment:{code:l("fs")}},y=new Float32Array([-1,-1,1,-1,1,1,1,1,-1,1,-1,-1]),O=new Float32Array([-2,2,2,2,2,-2,2,-2,-2,-2,-2,2]),_={vertices:{position:{data:y,format:"float32x2"},textureCoordinates:{data:O,format:"float32x2"}}},r=new Array(e.MAX);for(let a=0;a<e.MAX;++a)r[a]={minFilter:"linear",magFilter:"linear",mipmapFilter:"linear"};r[e.TOP_LEFT].addressModeU="mirror-repeat";r[e.TOP_RIGHT].addressModeU="clamp-to-edge";r[e.BOTTOM_RIGHT].addressModeU="repeat";r[e.BOTTOM_LEFT].addressModeU="clamp-to-edge";r[e.TOP_LEFT].addressModeV="mirror-repeat";r[e.TOP_RIGHT].addressModeV="mirror-repeat";r[e.BOTTOM_RIGHT].addressModeV="repeat";r[e.BOTTOM_LEFT].addressModeV="clamp-to-edge";const u="../../assets/img/Di-3d.png";let c;w(u,function(a){c={size:[a.width,a.height],sources:[{image:a,mipLevel:0}],format:"rgba8unorm",generateMipmap:!0},M()});function M(){const a=[],T={descriptor:{colorAttachments:[{clearValue:[0,0,0,1],loadOp:"clear"}]},renderObjects:a},p=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),d={pipeline:m,bindingResources:{mvp:p},geometry:{primitive:{topology:"triangle-list"},vertices:_.vertices,draw:{__type__:"DrawVertex",vertexCount:6,instanceCount:1}}};for(let o=0;o<e.MAX;++o)a.push({...d,viewport:{x:s[o].x,y:s[o].y,width:s[o].z,height:s[o].w},bindingResources:{...d.bindingResources,diffuse:{texture:c,sampler:r[o]}},geometry:{...d.geometry,draw:{__type__:"DrawVertex",vertexCount:6,instanceCount:1}}});i.submit({commandEncoders:[{passEncoders:[T]}]});for(let o=0;o<r.length;++o)i.deleteSampler(r[o]);i.deleteTexture(c),i.deleteProgram(m)}
//# sourceMappingURL=sampler_wrap.html-bf268b82.js.map
