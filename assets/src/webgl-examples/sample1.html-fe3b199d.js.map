{"version":3,"file":"sample1.html-fe3b199d.js","sources":["../../../../examples/src/webgl-examples/sample1.ts"],"sourcesContent":["import { Submit } from \"@feng3d/render-api\";\nimport { WebGL } from \"@feng3d/webgl\";\n\nconst init = async (canvas: HTMLCanvasElement) =>\n{\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    canvas.width = canvas.clientWidth * devicePixelRatio;\n    canvas.height = canvas.clientHeight * devicePixelRatio;\n\n    const webgl = new WebGL({ canvasId: \"glcanvas\", webGLcontextId: \"webgl\" }); // 初始化WebGL\n\n    const submit: Submit = { // 一次GPU提交\n        commandEncoders: [ // 命令编码列表\n            {\n                passEncoders: [ // 通道编码列表\n                    { // 渲染通道\n                        descriptor: { // 渲染通道描述\n                            colorAttachments: [{ // 颜色附件\n                                clearValue: [0.0, 0.0, 0.0, 1.0], // 渲染前填充颜色\n                            }],\n                        },\n                        renderPassObjects: [{ // 渲染对象\n                            pipeline: { // 渲染管线\n                                vertex: { // 顶点着色器\n                                    code: `\n                                    attribute vec4 position;\n\n                                    void main() {\n                                        gl_Position = position;\n                                    }\n                                    ` },\n                                fragment: { // 片段着色器\n                                    code: `\n                                    precision highp float;\n                                    uniform vec4 color;\n                                    void main() {\n                                        gl_FragColor = color;\n                                        // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n                                    }\n                                    ` },\n                            },\n                            vertices: {\n                                position: { data: new Float32Array([0.0, 0.5, -0.5, -0.5, 0.5, -0.5]), format: \"float32x2\" }, // 顶点坐标数据\n                            },\n                            indices: new Uint16Array([0, 1, 2]), // 顶点索引数据\n                            draw: { __type__: \"DrawIndexed\", indexCount: 3 }, // 绘制命令\n                            bindingResources: { color: [1, 0, 0, 1] }, // Uniform 颜色值。\n                        }]\n                    },\n                ]\n            }\n        ],\n    };\n\n    webgl.submit(submit); // 提交GPU执行\n};\n\nlet webglCanvas = document.querySelector(\"#glcanvas\") as HTMLCanvasElement;\nif (!webglCanvas)\n{\n    webglCanvas = document.createElement(\"canvas\");\n    webglCanvas.id = \"webgpu\";\n    webglCanvas.style.width = \"400px\";\n    webglCanvas.style.height = \"300px\";\n    document.body.appendChild(webglCanvas);\n}\ninit(webglCanvas);"],"names":["init","canvas","devicePixelRatio","webgl","WebGL","submit","webglCanvas"],"mappings":"6HAGA,MAAMA,EAAO,MAAOC,GACpB,CACU,MAAAC,EAAmB,OAAO,kBAAoB,EAC7CD,EAAA,MAAQA,EAAO,YAAcC,EAC7BD,EAAA,OAASA,EAAO,aAAeC,EAEhC,MAAAC,EAAQ,IAAIC,EAAM,CAAE,SAAU,WAAY,eAAgB,QAAS,EAEnEC,EAAiB,CACnB,gBAAiB,CACb,CACI,aAAc,CACV,CACI,WAAY,CACR,iBAAkB,CAAC,CACf,WAAY,CAAC,EAAK,EAAK,EAAK,CAAG,CAAA,CAClC,CACL,EACA,kBAAmB,CAAC,CAChB,SAAU,CACN,OAAQ,CACJ,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAMJ,EACN,SAAU,CACN,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAOJ,CACV,EACA,SAAU,CACN,SAAU,CAAE,KAAM,IAAI,aAAa,CAAC,EAAK,GAAK,IAAM,IAAM,GAAK,GAAI,CAAC,EAAG,OAAQ,WAAY,CAC/F,EACA,QAAS,IAAI,YAAY,CAAC,EAAG,EAAG,CAAC,CAAC,EAClC,KAAM,CAAE,SAAU,cAAe,WAAY,CAAE,EAC/C,iBAAkB,CAAE,MAAO,CAAC,EAAG,EAAG,EAAG,CAAC,CAAE,CAAA,CAC3C,CACL,CACJ,CACJ,CACJ,CAAA,EAGJF,EAAM,OAAOE,CAAM,CACvB,EAEA,IAAIC,EAAc,SAAS,cAAc,WAAW,EAC/CA,IAEaA,EAAA,SAAS,cAAc,QAAQ,EAC7CA,EAAY,GAAK,SACjBA,EAAY,MAAM,MAAQ,QAC1BA,EAAY,MAAM,OAAS,QAClB,SAAA,KAAK,YAAYA,CAAW,GAEzCN,EAAKM,CAAW"}