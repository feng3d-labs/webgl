{"version":3,"file":"sample2.html-19b5ac7b.js","sources":["../../../../examples/src/webgl-examples/sample2.ts"],"sourcesContent":["import { RenderPass } from \"@feng3d/render-api\";\nimport { WebGL } from \"@feng3d/webgl\";\nimport { mat4 } from \"gl-matrix\";\n\nmain();\n\nfunction main()\n{\n    const canvas = document.querySelector(\"#glcanvas\") as HTMLCanvasElement;\n\n    const { projectionMatrix, modelViewMatrix } = drawScene(canvas);\n\n    const webgl = new WebGL({ canvasId: \"glcanvas\", webGLcontextId: \"webgl\" });\n\n    const renderPass: RenderPass = {\n        descriptor: {\n            colorAttachments: [{\n                clearValue: [0, 0, 0, 1],\n                loadOp: \"clear\",\n            }],\n            depthStencilAttachment: {\n                depthClearValue: 1.0,\n                depthLoadOp: \"clear\",\n            },\n        },\n        renderObjects: [{\n            pipeline: {\n                vertex: {\n                    code: `\n            attribute vec4 aVertexPosition;\n        \n            uniform mat4 uModelViewMatrix;\n            uniform mat4 uProjectionMatrix;\n        \n            void main() {\n              gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n            }` }, fragment: {\n                    code: `\n            void main() {\n                gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\n            }` },\n                depthStencil: { depthCompare: \"less-equal\" }\n            },\n            geometry: {\n                primitive: { topology: \"triangle-strip\" },\n                vertices: {\n                    aVertexPosition: {\n                        format: \"float32x2\",\n                        data: new Float32Array([\n                            1.0, 1.0,\n                            -1.0, 1.0,\n                            1.0, -1.0,\n                            -1.0, -1.0,\n                        ]),\n                    }\n                },\n                draw: { __type__: \"DrawVertex\", firstVertex: 0, vertexCount: 4 },\n            },\n            bindingResources: {\n                uProjectionMatrix: projectionMatrix,\n                uModelViewMatrix: modelViewMatrix,\n            },\n        }],\n    };\n\n    webgl.submit({ commandEncoders: [{ passEncoders: [renderPass] }] });\n}\n\nfunction drawScene(canvas: HTMLCanvasElement)\n{\n    // Create a perspective matrix, a special matrix that is\n    // used to simulate the distortion of perspective in a camera.\n    // Our field of view is 45 degrees, with a width/height\n    // ratio that matches the display size of the canvas\n    // and we only want to see objects between 0.1 units\n    // and 100 units away from the camera.\n\n    const fieldOfView = 45 * Math.PI / 180; // in radians\n    const aspect = canvas.clientWidth / canvas.clientHeight;\n    const zNear = 0.1;\n    const zFar = 100.0;\n    const projectionMatrix = mat4.create();\n\n    // note: glmatrix.js always has the first argument\n    // as the destination to receive the result.\n    mat4.perspective(projectionMatrix,\n        fieldOfView,\n        aspect,\n        zNear,\n        zFar);\n\n    // Set the drawing position to the \"identity\" point, which is\n    // the center of the scene.\n    const modelViewMatrix = mat4.create();\n\n    // Now move the drawing position a bit to where we want to\n    // start drawing the square.\n\n    mat4.translate(modelViewMatrix, // destination matrix\n        modelViewMatrix, // matrix to translate\n        [-0.0, 0.0, -6.0]); // amount to translate\n\n    return { projectionMatrix, modelViewMatrix };\n}\n"],"names":["main","canvas","projectionMatrix","modelViewMatrix","drawScene","webgl","WebGL","renderPass","fieldOfView","aspect","zNear","zFar","mat4.create","mat4.perspective","mat4.translate"],"mappings":"kNAIAA,IAEA,SAASA,GACT,CACU,MAAAC,EAAS,SAAS,cAAc,WAAW,EAE3C,CAAE,iBAAAC,EAAkB,gBAAAC,CAAgB,EAAIC,EAAUH,CAAM,EAExDI,EAAQ,IAAIC,EAAM,CAAE,SAAU,WAAY,eAAgB,QAAS,EAEnEC,EAAyB,CAC3B,WAAY,CACR,iBAAkB,CAAC,CACf,WAAY,CAAC,EAAG,EAAG,EAAG,CAAC,EACvB,OAAQ,OAAA,CACX,EACD,uBAAwB,CACpB,gBAAiB,EACjB,YAAa,OACjB,CACJ,EACA,cAAe,CAAC,CACZ,SAAU,CACN,OAAQ,CACJ,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAQX,EAAG,SAAU,CACR,KAAM;AAAA;AAAA;AAAA,cAGX,EACC,aAAc,CAAE,aAAc,YAAa,CAC/C,EACA,SAAU,CACN,UAAW,CAAE,SAAU,gBAAiB,EACxC,SAAU,CACN,gBAAiB,CACb,OAAQ,YACR,KAAM,IAAI,aAAa,CACnB,EAAK,EACL,GAAM,EACN,EAAK,GACL,GAAM,EAAA,CACT,CACL,CACJ,EACA,KAAM,CAAE,SAAU,aAAc,YAAa,EAAG,YAAa,CAAE,CACnE,EACA,iBAAkB,CACd,kBAAmBL,EACnB,iBAAkBC,CACtB,CAAA,CACH,CAAA,EAGCE,EAAA,OAAO,CAAE,gBAAiB,CAAC,CAAE,aAAc,CAACE,CAAU,EAAG,CAAA,CAAG,CACtE,CAEA,SAASH,EAAUH,EACnB,CAQU,MAAAO,EAAc,GAAK,KAAK,GAAK,IAC7BC,EAASR,EAAO,YAAcA,EAAO,aACrCS,EAAQ,GACRC,EAAO,IACPT,EAAmBU,IAIpBC,EAAYX,EACbM,EACAC,EACAC,EACAC,CAAA,EAIE,MAAAR,EAAkBS,IAKnBE,OAAAA,EAAUX,EACXA,EACA,CAAC,GAAM,EAAK,EAAI,CAAA,EAEb,CAAE,iBAAAD,EAAkB,gBAAAC,EAC/B"}